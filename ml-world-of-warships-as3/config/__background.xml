<!-- DO NOT EDIT FILE __background.xml !!!1111 -->
<!-- DO NOT EDIT FILE __background.xml !!!1111 -->
<!-- DO NOT EDIT FILE __background.xml !!!1111 -->

<!-- 
	HOWTO: moving default elements
		
	battle_timer: element name
	x: attribute
	0: value
		
	As for coordinates, they are relative to parent. 
	
	<bind name="instance_property" value="getDescendantByName('battle_timer');'x';0"/>
-->

<!--
	Add shadow to any block:
	<bind name="instance" value="'DropShadow'; {}"/>
-->
	
<!--
	Add <hr> to any block:
	<bind name="instance" value="'HorizontalDivider'; {}"/>
-->

	
<ui>	
    <css name="$FontSizeML">
        <fontFamily value="$WWSDefaultFont"/>
		<mouseEnabled value="false"/>
		<mouseChildren value="false"/>
		<fontSize value="13"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
    
    <css name="$FontColorDead">
        <textColor value="0x5F5F5F"/>
    </css>
    
    
    <!--<block className="Consumable">
        <style>
            <width value="60px"/>
            <height value="60px"/>
        </style>
        
        <bind name="style"  value="'backgroundImage'; 'url:' + '../XVMImages/consumables/' + name + '.png'"/>
        
        <block type="text">
            <bind name="countdown" value="timeLeft; 'countdownText'; 'ss'"/>
			<bind name="text" value="countdownText"/>
        </block>
    </block>-->
    
	<block className="MagicMarkerBlock">		
		<bind name="collectionDH" value="CC.camera; 'cameraCollection'"/>
		<bind name="entityDH" value="'cameraEntity'; cameraCollection[0].id"/>
		<bind name="watchDH" value="'camera'; ['cameraEntity.camera.evAltVisionChanged','cameraEntity.camera.evTacticalStateChanged']; cameraEntity.camera"/>
		<bind name="controller" value="ML_Controllers.ML_MarkerInfoController"/>
		
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		
		<bind name="watch" value=" 'markersEnabled'; (userPrefs.elementsGroupExpand.markersEnabled == null) ? true : userPrefs.elementsGroupExpand.markersEnabled "/>

        <!--<block>
            <bind name="repeat" value="comsumables; 'Consumable'; {}"/>
            <style>
                <flow value="horizontal"/>
                <top value="-70px"/>
                <left value="-50%"/>
            </style>
        </block>-->
        
		<!-- Ship fire icon -->
        <block>
            <block type="text">
                <style>
                    <fontFamily value="ML_WOTSymbol"/>
                    <textColor value="0xE28822"/>
                    <fontSize value="25px"/>
                    <dropShadowFilter value="1 90 0x08222a 0.7 2.0 2.0 1.0 2"/>
                </style>
                <bind name="visible" value="isFire"/>
                <bind name="text" value="'Q'"/>
            </block>
            
            <block type="text">
                <style>
                    <fontFamily value="ML_WOWSSymbol"/>
                    <textColor value="0xFF0060"/>
                    <fontSize value="25px"/>
                    <dropShadowFilter value="1 90 0x08222a 0.7 2.0 2.0 1.0 2"/>
                </style>
                <bind name="visible" value="isTorpedoShoot"/>
                <bind name="text" value="'J'"/>
            </block>
            
            <style>
                <top value="-75"/>
                <marginLeft value="-50%"/>
                <flow value="horizontal"/>
            </style>
            <bind name="visible" value="!(camera.isTactical)"/>
        </block>
		
		<!-- statistics -->
		<block>
			<bind name="visible" value="!(camera.isTactical) &amp;&amp; markersEnabled &amp;&amp; statistics.real_data"/>
			<!-- 
				camera.isTactical
				camera.altVision
			-->
			<style>
				<position value="absolute"/>
				<marginTop value="-50%"/>
				<marginLeft value="-50%"/>
				<flow value="horizontal"/>
			</style>
			<block type="text">
				<style>
					<textColor value="0xFF0404"/>
					<fontSize value="12px"/>
					<dropShadowFilter value="1 90 0x08222a 0.7 2.0 2.0 1.0 2"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="style" value="'textColor'; ('0x'+statistics.all_wins_color)"/>
				<bind name="text" value="statistics.all_wins + '%'"/>
				<bind name="scaleY" value="camera.altVision ? 1: 0"/>
			</block>
			<block type="text">
				<style>
					<marginLeft value="25"/>
					<fontSize value="12px"/>
					<dropShadowFilter value="1 90 0x08222a 0.7 2.0 2.0 1.0 2"/>
				</style>
				<styleClass value="$TextDefaultBold"/>
				<bind name="style" value="'textColor'; ('0x'+statistics.all_rate_color)"/>
                <bind name="watch" value="'earsStatisticsEnabled'; (userPrefs.elementsGroupExpand.earsStatisticsEnabled == null) ? true : userPrefs.elementsGroupExpand.saveEarsStatisticsEnabled "/>
				<bind name="text" value="statistics.all_rate"/>
			</block>
		</block>
	</block>
	
	
	<block className="HorizontalDivider">
		<styleClass value="$PxHorizontalCorrection"/>
		<style>
			<width value="100%"/>
			<height value="3px"/>
		</style>
		<block className="divider_h" type="native">
			<styleClass value="$Fullsize"/>
		</block>
	</block>
	
	<block className="DropShadow">
		<!--
			Add shadow to any block:
			<bind name="instance" value="'DropShadow'; {}"/>
		-->
		<styleClass value="$FullsizeAbsolute"/>
		<styleClass value="$MouseDisable"/>
		<block className="drop_shadow" type="native">
			<styleClass value="$Fullsize"/>
			<style>
				<position value="absolute"/>
				<marginTop value="-2px"/>
				<marginRight value="-6px"/>
				<marginBottom value="-10px"/>
				<marginLeft value="-6px"/>
			</style>
		</block>
	</block>
	
	<css name="$TextHeaderLargeBold">
		<mouseChildren value="false"/>
		<mouseEnabled value="false"/>
		<fontFamily value="$WWSDefaultFontBold"/>
		<fontSize value="21"/>
		<dropShadowFilter value="1 90 0x08222a 0.5 2.0 2.0 1.0 2"/>
		<selectable value="false"/>
		<textColor value="0xEEEEEE"/>
	</css>
	
	<block className="XVMClock"> 
		<bind name="appear" value="'addedToStage'; 0.6; 0; {alpha: 0}; {alpha: 1}"/>
        <bind name="watch" value=" 'clockEnabled'; (userPrefs.elementsGroupExpand.clockEnabled == null) ? true : userPrefs.elementsGroupExpand.clockEnabled "/>
		<bind name="visible" value="clockEnabled"/>
		<style>
			<position value="absolute"/>
			<left value="160px"/> <!-- x coordinate -->
			<top value="0px"/> <!-- y coordinate -->
		</style>
		<block type="text">
			<styleClass value="$TextDefaultBold"/>
			<style>
				<textAlign value="right"/>
				<textColor value="0xEEEEEE"/> <!-- font color -->
				<fontSize value="18"/> <!-- font size -->
			</style>
			<bind name="clock" value="'timeText'; 'hh:mm:ss'"/>
			<bind name="pureText" value="'' + timeText"/>
		</block>
	</block>
	
	<block className="XVMFragsHeader">
		<!--
			Block with teamScore (at the top of the screen)
			
			Internal variables:
			_fragsEnabled: is this block visible;
		-->
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'gameInfo'"/>
        <bind name="watch" value="'fragsEnabled'; (userPrefs.elementsGroupExpand.fragsEnabled == null) ? true : userPrefs.elementsGroupExpand.fragsEnabled "/>
		<bind name="visible" value="fragsEnabled"/>
		<block type="text">
			<bind name="class" value="'$TextHeaderLargeBold'"/>
			<bind name="text" value="gameInfo.alliedFrags"/>
		</block>
		
		<block type="text">
			<bind name="class" value="'$TextHeaderLargeBold'"/>
			<bind name="text" value="':'"/>
		</block>
		
		<block type="text">
			<bind name="class" value="'$TextHeaderLargeBold'"/>
			<bind name="text" value="gameInfo.enemyFrags"/>
		</block>
		
		<style>
			<flow value="horizontal"/>
			<top value="3px"/>
		</style>
		<styleClass value="$MiddleAligned"/>
	</block>
    
	<block className="XVMCurrentTargetInfoPanel">
		<bind name="controller" value="ML_Controllers.ML_CurrentTargetController"/>
		<bind name="visible" value="target!=null &amp;&amp; _targetInfoEnabled"/>
		
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		
		<bind name="draggable" value="'THDragZone'; 'IMPosition'; 'TH'"/>
		
		<bind name="watch" value="'THPositionX';	(userPrefs.IMPositionX.TH == null)		? ((stageSize.x / 2) + 100) : 	userPrefs.IMPositionX.TH"/>
		<bind name="watch" value="'THPositionY';	(userPrefs.IMPositionY.TH == null)		? ((stageSize.y / 2) + 150) : 	userPrefs.IMPositionY.TH"/>
		
		<bind name="left" value="THPositionX"/>
		<bind name="top" value="THPositionY"/>
		
		<bind name="instance" value="'DropShadow'; {}"/>
		
		<block className="XVMTargetHeader">
			<bind name="rotation" value="target.worldYaw"/>
			<block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<bind name="text" value="target.worldYaw"/>
					<style>
						<width value="110px"/>
						<fontSize value="18"/>
					</style>
				</block>

				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$FontSizeLarge"/>
					<bind name="text" value="target.shipRlevel"/>
					
					<style>
						<marginLeft value="10px"/>
						<width value="20px"/>
						<fontSize value="18"/>
					</style>
				</block>

				<style>
					<flow value="horizontal"/>
					<marginLeft value="7px"/>
					<marginTop value="5px"/>
					<marginRight value="7px"/>
				</style>
			</block>
			
			<params>
				<param name="name" value="THDragZone"/>
			</params>
			<bind name="instance" value="'HorizontalDivider'; {}"/>
		</block>

		<block>
			<bind name="style"  value="'backgroundImage'; 'url:' + '../' +'ship_previews/' +target.shipShortName + '.png'"/>
			<bind name="scaleX" value="0.65"/>
			<bind name="scaleY" value="0.65"/>
			
			<styleClass value="$MiddleAligned"/>
			
			<style>
				<height value="82px"/>
				<width value="140"/>
			</style>
		</block>
		
			
		<block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="'IDS_ARTILLERY'"/>
				<style>
					<width value="100"/>
				</style>
			</block>
			
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="(target.shipParams.artillery_max_dist==null?'--':format(target.shipParams.artillery_max_dist, -1)) + ' km'"/>
				
				<style>
					<textAlign value="right"/>
					<width value="50"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		
		<block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="'IDS_RELOADTIME'"/>
				<style>
					<width value="100"/>
				</style>
			</block>
			
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="(target.shipParams.artillery_time_reload==null?'--':format(target.shipParams.artillery_time_reload, -1)) + ' s'"/>
				
				<style>
					<textAlign value="right"/>
					<width value="50"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		
		<block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="'IDS_TORPEDOES'"/>
				<style>
					<width value="100"/>
				</style>
			</block>
			
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="(target.shipParams.torpedoes_max_dist==null?'--':format(target.shipParams.torpedoes_max_dist, -1)) + ' km'"/>
				
				<style>
					<textAlign value="right"/>
					<width value="50"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		
		<block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="'IDS_RELOADTIME'"/>
				<style>
					<width value="120"/>
				</style>
			</block>
			
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="(target.shipParams.torpedoes_time_reload==null?'--':format(target.shipParams.torpedoes_time_reload, -1)) + ' s'"/>
				
				<style>
					<textAlign value="right"/>
					<width value="30"/>
				</style>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		
	
		<block type="text">
			<styleClass value="$TextDefault"/>
			<styleClass value="$FontSizeLarge"/>
			<bind name="text" value="target.name"/>
		</block>

		<style>
			<position value="absolute"/>
			<backgroundColor value="0x20000000"/>
		</style>
	</block>

    <block className="ML_RowRendererLeft">         
        <bind name="entityDH" value="'playerInfo'; id"/>
        <bind name="watchDH" value="'is_self'; ['playerInfo.relation.evChanged']; playerInfo.relation.value == 0"/>
        <bind name="watchDH" value="'is_alive'; ['playerInfo.avatar.evKilled']; playerInfo.avatar.isAlive"/>
        <bind name="watchDH" value="'tkStatus'; ['playerInfo.avatar.evTeamkillStatusChanged']; playerInfo.avatar.tkStatus"/>
        <bind name="watchDH" value="'division'; ['playerInfo.avatar.evDivisionChanged']; playerInfo.avatar.division"/>
        <bind name="watchDH" value="'isInSameDivision'; ['playerInfo.avatar.evDivisionChanged']; playerInfo.avatar.isInSameDivision"/>
        <bind name="watchDH" value="'divisionSign'; ['playerInfo.avatar.evDivisionChanged']; playerInfo.avatar.divisionSign"/>
        <bind name="watchDH" value="'statistics'; ['playerInfo.statistics.evChanged']; playerInfo.statistics.statistics"/>
        <bind name="watchDH" value="'shipInfo'; ['playerInfo.shipInfo.evChanged']; playerInfo.shipInfo.shipInfo"/>
        <bind name="watchDH" value="'flags'; ['playerInfo.target.evChanged']; playerInfo.target.flags"/>
        
        <bind name="clickSplit"/> <!-- for left_click -->
        <bind name="call" value="'left_click'; 'camera.moveCameraToPlayer'; playerInfo.avatar.id"/>
        
        <bind name="var" value="{healthP:'100%'}"/>
        <bind name="watchDH" value="'healthP'; ['playerInfo.health.evValueChanged']; (((playerInfo.health.value > 0) &amp;&amp; is_alive &amp;&amp; visible) ? ((100 * playerInfo.health.value / playerInfo.health.max) + '%'): ( is_alive ? healthP: '0%'))"/>
        <bind name="dataRefDH" value="'ship'; 'playerInfo.avatar.ship.ref.ship'"/>
        
        <block className="HealthRowHolder">
            <style>
                <width value="100%"/>
                <height value="100%"/>
                <position value="absolute"/>
            </style>
            <bind name="style" value="'marginRight'; (showStatistics &amp;&amp; statistics.real_data) ? '70px' : '0px'"/>
            
            <block className="HealthRow">
                <style>
                    <width value="100%"/>
                    <height value="100%"/>
                    <blurFilter value="2 2"/>
                    <position value="absolute"/>
                </style>
                <bind name="style" value="'width'; healthP"/>
                <bind name="style" value="'backgroundColor'; '0x4032CD32'"/>
            </block>
        </block>
        
        
        <block className="BackgroundRowImg">
            <style>
                <width value="100%"/>
                <height value="100%"/>
                <blurFilter value="2 2"/>
                <position value="absolute"/>
                
                <backgroundStretchY value="true"/>
                <backgroundStretchX value="true"/>
            </style>
            <bind name="style" value="'backgroundImage'; 'url:../XVMimages/rowBackground.png'"/>
            <bind name="style" value="'marginRight'; (showStatistics &amp;&amp; statistics.real_data) ? '0' : '-43px'"/>
        </block> 
        
        <block>
            <styleClass value="$MiddleVAligned"/>
            <style>
                <width value="25px"/> 
            </style>
            <block className="division_item" type="native">
                <bind name="visible" value="division &gt; 0"/>
                <styleClass value="$MiddleAligned"/>
                <style>
                    <top value="2px"/>
                </style>
                <bind name="gotoAndStop!" value="isInSameDivision ? divisionSign + 1 : divisionSign + 1 + 10"/>
            </block>
        </block>
            
        

        <block type="text">
            <bind name="text" value="playerInfo.avatar.name"/>
            <bind name="visible" value="earIndex"/>
            <styleClass value="$FontSizeML"/>
            
            <bind name="style" value="'textColor'; ('0x'+statistics.all_wins_color)"/>
            <!--<bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>-->
            
            <style>
                <width value="55px"/>
                <marginLeft value="10px"/>
            </style>
        </block>
        <block type="text">
            <bind name="text" value="ship.nameUpper"/>
            <styleClass value="$FontSizeML"/>
            <bind name="class" value="'$Bold'"/>
            
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="65px"/>
                <marginLeft value="5px"/>
            </style>
        </block>
        <block type="text">
            <bind name="text" value="ship.levelRome"/>
            <styleClass value="$FontSizeML"/>
            
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="20px"/>
                <marginLeft value="5px"/>
            </style>
        </block>
        
        
        <block type="text">
            <bind name="text" value="ship.subtype=='Destroyer'?'&#x33;':ship.subtype=='Cruiser'?'&#x32;':ship.subtype=='Battleship'?'&#x31;':'&#x30;'"/>
            <styleClass value="$TextDefault"/>
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="20"/>
                <fontFamily value="ML_WOWSSymbol"/>
                <marginLeft value="5px"/>
            </style>
        </block>
        
        <bind name="watchDH" value="'frags'; ['playerInfo.avatar.evFragsChanged']; playerInfo.avatar.frags"/>
        <block type="text">
            <bind name="text" value="frags"/>
            <styleClass value="$FontSizeML"/>
            
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="15px"/>
                <marginLeft value="5px"/>
            </style>
        </block>
        
        <bind name="var" value="{wasVisible:false}"/>
        <bind name="watchDH" value="'visible'; ['playerInfo.visibility.evChanged']; playerInfo.visibility.visible"/>
        <bind name="watchDH" value="'wasVisible'; ['playerInfo.visibility.evChanged']; playerInfo.visibility.visible || wasVisible "/>
        
        <block type="text">
            <bind name="text" value="statistics.all_rate"/>
            <bind name="style" value="'textColor'; ('0x'+statistics.all_rate_color)"/>
            <bind name="visible" value="showStatistics &amp;&amp; statistics.real_data"/>
            <bind name="class" value="'$Bold'"/>
            
            <styleClass value="$FontSizeML"/>
            <style>
                <marginLeft value="5px"/>
                <width value="30px"/>
                <dropShadowFilter value="1 90 0x08222a 0.7 2.0 2.0 1.0 2"/>
            </style>
        </block>
            
        <block type="text">
            <style>
                <textColor value="0xFF0404"/>
                <marginLeft value="5px"/>
                <width value="30px"/>
                <dropShadowFilter value="1 90 0x08222a 0.7 2.0 2.0 1.0 2"/>
            </style>
            
            <styleClass value="$FontSizeML"/>
            <bind name="class" value="'$Bold'"/>
            <bind name="style" value="'textColor'; ('0x'+statistics.all_wins_color)"/>
            <bind name="text" value="statistics.all_wins + '%'"/>
            <bind name="visible" value="showStatistics &amp;&amp; statistics.real_data"/>
            
        </block>
        
        <bind name="visible" value="is_alive ? true: deadEnabled"/>
        <bind name="alpha" value="(!is_alive)?0.7:1"/>
            
        <bind name="watchDH" value="'player'; ['playerInfo.player.evChanged']; playerInfo.player.playerInfo"/>
        <bind name="watchDH" value="'mute'; ['playerInfo.avatar.evMuteChanged']; playerInfo.avatar.mute"/>
            
        <bind name="style" value="'hitTest'; true"/>
        <bind name="tooltip" value="'ML_MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'left', _instructionText: 'IDS_HELP_DEAD_AHEAD_CAMERA'}, {_type: 'right', _instructionText: 'IDS_HINT_CLICK_TO_COMPLAIN'}], _maxWidth: 250}"/>
        <bind name="menu" value="'ML_ComplaintMenu'; { _nickname: player.name, _mute: mute, _playerId: player.id, _isInSameDivision: isInSameDivision, _battleType: gameInfo.battleType }; null; 'contextMenuVisible'"/>
        <bind name="dispatch" value="'buttonClick'; 'Tooltip.Close'; {}"/>
        <bind name="name" value="'contextMenuVisible_' + !!(contextMenuVisible) + '_' + avatar.name"/>
            
        <style>
            <marginBottom value="1px"/>
            <flow value="horizontal"/>
            <height value="22px"/>
        </style>
        
    </block>
    
    <block className="ML_RowRendererRight">            
        <bind name="entityDH" value="'playerInfo'; id"/>
        <bind name="watchDH" value="'is_self'; ['playerInfo.relation.evChanged']; playerInfo.relation.value == 0"/>
        <bind name="watchDH" value="'is_alive'; ['playerInfo.avatar.evKilled']; playerInfo.avatar.isAlive"/>
        <bind name="watchDH" value="'tkStatus'; ['playerInfo.avatar.evTeamkillStatusChanged']; playerInfo.avatar.tkStatus"/>
        <bind name="watchDH" value="'isInSameDivision'; ['playerInfo.avatar.evDivisionChanged']; playerInfo.avatar.isInSameDivision"/>
        <bind name="watchDH" value="'division'; ['playerInfo.avatar.evDivisionChanged']; playerInfo.avatar.division"/>
        <bind name="watchDH" value="'divisionSign'; ['playerInfo.avatar.evDivisionChanged']; playerInfo.avatar.divisionSign"/>
        <bind name="watchDH" value="'statistics'; ['playerInfo.statistics.evChanged']; playerInfo.statistics.statistics"/>
        
        <bind name="clickSplit"/> <!-- for left_click -->
        <bind name="call" value="'left_click'; 'camera.moveCameraToPlayer'; playerInfo.avatar.id"/>
        
        <bind name="var" value="{healthP:'100%'}"/>
        <bind name="watchDH" value="'healthP'; ['playerInfo.health.evValueChanged']; (((playerInfo.health.value > 0) &amp;&amp; is_alive) ? ((100 * playerInfo.health.value / playerInfo.health.max) + '%'): ( is_alive ? healthP: '0%'))"/>
        <bind name="dataRefDH" value="'ship'; 'playerInfo.avatar.ship.ref.ship'"/>
            
        <block className="HealthRowHolder">
            <style>
                <width value="100%"/>
                <height value="100%"/>
                <position value="absolute"/>
            </style>
            <bind name="style" value="'marginRight'; (showStatistics &amp;&amp; statistics.real_data) ? '90px' : '20px'"/>
            
            <style>
                <width value="100%"/>
                <height value="100%"/>
                <blurFilter value="2 2"/>
                <position value="absolute"/>
                <align value="right"/>
                <left value="100%"/>
            </style>
            <bind name="scaleX" value="-1"/>
            <bind name="style" value="'width'; healthP"/>
            <bind name="style" value="'backgroundColor'; '0x4032CD32'"/>
        </block>
        
        <block className="BackgroundRowImg">
            <style>
                <width value="100%"/>
                <height value="100%"/>
                <blurFilter value="2 2"/>
                <position value="absolute"/>
                <align value="right"/>
                <left value="100%"/>
                
                <backgroundStretchY value="true"/>
                <backgroundStretchX value="true"/>
            </style>
            <bind name="scaleX" value="-1"/>
            <bind name="style" value="'backgroundImage'; 'url:../XVMimages/rowBackground.png'"/>
            <bind name="style" value="'marginRight'; (showStatistics &amp;&amp; statistics.real_data) ? '10px' : '-30px'"/>
        </block> 
        
        
        <bind name="style" value="'marginLeft'; (showStatistics &amp;&amp; statistics.real_data) ? '0' : '70px'"/>
            
        <bind name="var" value="{wasVisible:false}"/>
        <bind name="watchDH" value="'visible'; ['playerInfo.visibility.evChanged']; playerInfo.visibility.visible"/>
        <bind name="watchDH" value="'wasVisible'; ['playerInfo.visibility.evChanged']; playerInfo.visibility.visible || wasVisible "/>
            
        <block type="text">
            <style>
                <textColor value="0xFF0404"/>
                <marginRight value="5px"/>
                <width value="30px"/>
                <dropShadowFilter value="1 90 0x08222a 0.7 2.0 2.0 1.0 2"/>
            </style>
            
            <styleClass value="$FontSizeML"/>
            <bind name="class" value="'$Bold'"/>
            <bind name="style" value="'textColor'; ('0x'+statistics.all_wins_color)"/>
            <bind name="text" value="statistics.all_wins + '%'"/>
            <bind name="visible" value="showStatistics &amp;&amp; statistics.real_data"/>
        </block>
        
        <block type="text">
            <bind name="text" value="statistics.all_rate"/>
            <bind name="style" value="'textColor'; ('0x'+statistics.all_rate_color)"/>
            <bind name="visible" value="showStatistics &amp;&amp; statistics.real_data"/>
            <bind name="class" value="'$Bold'"/>
            
            <styleClass value="$FontSizeML"/>
            <style>
                <marginRight value="5px"/>
                <width value="30px"/>
                <dropShadowFilter value="1 90 0x08222a 0.7 2.0 2.0 1.0 2"/>
            </style>
        </block>
            
            
        <block type="text">
            <bind name="text" value="'A'"/>
            <styleClass value="$TextDefault"/>
            <bind name="style" value="'textColor'; visible ? '0xDDffa500': '0xDDcccccc'"/>
            <bind name="scaleY" value="(wasVisible &amp;&amp; is_alive) ? 1 : 0"/>
            
            <style>
                <width value="20"/>
                <fontFamily value="ML_WOWSSymbol"/>
                <marginRight value="5px"/>
                <fontSize value="18"/>
            </style>
        </block>
            
        <bind name="watchDH" value="'frags'; ['playerInfo.avatar.evFragsChanged']; playerInfo.avatar.frags"/>
        <block type="text">
            <bind name="text" value="frags"/>
            <styleClass value="$FontSizeML"/>
            
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="15px"/>
                <marginRight value="5px"/>
            </style>
        </block>
            
        <block type="text">
            <bind name="text" value="ship.subtype=='Destroyer'?'&#x37;':ship.subtype=='Cruiser'?'&#x36;':ship.subtype=='Battleship'?'&#x35;':'&#x34;'"/>
            <styleClass value="$TextDefault"/>
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="20"/>
                <fontFamily value="ML_WOWSSymbol"/>
                <marginRight value="5px"/>
            </style>
        </block>
            
         <block type="text">
            <bind name="text" value="ship.levelRome"/>
            <styleClass value="$FontSizeML"/>
            
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="20px"/>
                <marginRight value="5px"/>
            </style>
        </block>
        
            
        <block type="text">
            <bind name="text" value="ship.nameUpper"/>
            <styleClass value="$FontSizeML"/>
            <bind name="class" value="'$Bold'"/>
            
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="65px"/>
                <marginRight value="5px"/>
                <align value="right"/>
            </style>
        </block>
        
        <block type="text">
            <bind name="text" value="playerInfo.avatar.name"/>
            <bind name="visible" value="earIndex"/>
            <styleClass value="$FontSizeML"/>
            
            <bind name="class" value="is_alive 	? (tkStatus	? '$FontColorTeamkiller': is_self || isInSameDivision ? '$FontColorGolden': '$None'): '$FontColorDead'"/>
            
            <style>
                <width value="55px"/>
                <marginRight value="10px"/>
            </style>
        </block>   
            
            
        <block>
            <styleClass value="$MiddleVAligned"/>
            <style>
                <width value="25px"/> 
            </style>
            <block className="division_item" type="native">
                <bind name="visible" value="division &gt; 0"/>
                <styleClass value="$MiddleAligned"/>
                <style>
                    <top value="2px"/>
                </style>
                <bind name="gotoAndStop!" value="isInSameDivision ? divisionSign + 1 : divisionSign + 1 + 10"/>
            </block>
        </block>
            
        
        <bind name="visible" value="is_alive ? true: deadEnabled"/>
        <bind name="alpha" value="(!is_alive)?0.7:1"/>
            
        <bind name="watchDH" value="'player'; ['playerInfo.player.evChanged']; playerInfo.player.playerInfo"/>
        <bind name="watchDH" value="'mute'; ['playerInfo.avatar.evMuteChanged']; playerInfo.avatar.mute"/>
            
        <bind name="style" value="'hitTest'; true"/>
        <bind name="tooltip" value="'ML_MouseInstructionTooltip'; { _mouseInstructions: [{_type: 'right', _instructionText: 'IDS_HINT_CLICK_TO_COMPLAIN'}], _maxWidth: 250}"/>
        <bind name="menu" value="'ML_ComplaintMenu'; { _nickname: player.name, _mute: mute, _playerId: player.id, _isInSameDivision: isInSameDivision, _battleType: gameInfo.battleType }; null; 'contextMenuVisible'"/>
        <bind name="dispatch" value="'buttonClick'; 'Tooltip.Close'; {}"/>
        <bind name="name" value="'contextMenuVisible_' + !!(contextMenuVisible) + '_' + avatar.name"/>
            
        <style>
            <marginBottom value="1px"/>
            <flow value="horizontal"/>
			<align value="right"/>
            <height value="22px"/>
        </style>        
    </block>
    
	<block className="RootBlock">        
		<bind name="controller" value="monstrofil.controllers.EntitiesController"/>
        <bind name="watch" value="'indexEars'; (userPrefs.elementsGroupExpand.indexEars == null) ? false : userPrefs.elementsGroupExpand.indexEars"/>
        
        <bind name="collectionDH" value="CC.camera; 'cameraCollection'"/>
		<bind name="entityDH" value="'cameraEntity'; cameraCollection[0].id"/>
		<bind name="watchDH" value="'camera'; ['cameraEntity.camera.evTacticalStateChanged']; cameraEntity.camera"/>
        
        <bind name="controller" value="ML_Controllers.ML_EntitiesController"/>        
        <block className="LeftEar">
            <style>
                <position value="absolute"/>
            </style>
            <bind name="watch" value="'deadEnabled'; (userPrefs.elementsGroupExpand.deadEnabled == null) ? false : userPrefs.elementsGroupExpand.deadEnabled "/>
            <bind name="watch" value="'earsEnabled'; (userPrefs.elementsGroupExpand.earsEnabled == null) ? true : userPrefs.elementsGroupExpand.earsEnabled "/>
            <bind name="visible" value="earsEnabled &amp;&amp; !(camera.isTactical)"/>
            <bind name="watch" value="'indexEars'; (userPrefs.elementsGroupExpand.indexEars == null) ? false : userPrefs.elementsGroupExpand.indexEars"/>
            <bind name="watch" value="'earsStatisticsEnabled'; (userPrefs.elementsGroupExpand.earsStatisticsEnabled == null) ? true : userPrefs.elementsGroupExpand.earsStatisticsEnabled "/>
            <bind name="repeat" value="team; 'ML_RowRendererLeft'; {earIndex:indexEars, showStatistics:earsStatisticsEnabled, deadEnabled:deadEnabled}"/>
            <style>
                <top value="75px"/>
            </style>
        </block>
        
        <block className="RightEar">
            <style>
                <position value="absolute"/>
            </style>
            <bind name="watch" value="'earsEnabled'; (userPrefs.elementsGroupExpand.earsEnabled == null) ? true : userPrefs.elementsGroupExpand.earsEnabled "/>
            <bind name="watch" value="'deadEnabled'; (userPrefs.elementsGroupExpand.deadEnabled == null) ? false : userPrefs.elementsGroupExpand.deadEnabled "/>
            <bind name="visible" value="earsEnabled &amp;&amp; !(camera.isTactical)"/>
            <bind name="watch" value="'indexEars'; (userPrefs.elementsGroupExpand.indexEars == null) ? false : userPrefs.elementsGroupExpand.indexEars"/>
            <bind name="watch" value="'earsStatisticsEnabled'; (userPrefs.elementsGroupExpand.earsStatisticsEnabled == null) ? true : userPrefs.elementsGroupExpand.earsStatisticsEnabled "/>
            <bind name="repeat" value="enemy; 'ML_RowRendererRight'; {earIndex:indexEars, showStatistics:earsStatisticsEnabled, deadEnabled:deadEnabled}"/>
            <style>
                <top value="75px"/>
                <align value="right"/>
                <right value="0"/>
            </style>
        </block>
		
		<bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
		<bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
		<bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
		
		<bind name="watch" value=" 'targetInfoEnabled'; (userPrefs.elementsGroupExpand.targetInfoEnabled == null) ? false : userPrefs.elementsGroupExpand.targetInfoEnabled "/>
		<bind name="catch" value="'switchTargetInfoEnabledBox'; { targetInfoEnabled: !targetInfoEnabled }; 'saveTargetInfoEnabled'"/>
		<bind name="action" value="'saveTargetInfoEnabled' ; 'setUserPref' ; {value: targetInfoEnabled, name: 'elementsGroupExpand', subName: 'targetInfoEnabled'}"/>
		

		<bind name="instance" value="'XVMFragsHeader';{userPrefs:userPrefs}"/>
		<bind name="instance" value="'XVMClock';{userPrefs:userPrefs}"/>
        <bind name="instance" value="'MLSettings';{userPrefs:userPrefs}"/>

        
		<!--<bind name="instance" value="'XVMCurrentTargetInfoPanel';{_targetInfoEnabled:targetInfoEnabled}"/>-->
		
		
		<block className="XVMOwnShipDamageLog">
			<!--
				Own-ship-damage log.
				
				Local variables:
				_hitlogOwnShipEnabled: boolean
				damagedMeEntities: Array<Player>
					
				damagedMeEntities contains FIVE last players that damaged you during battle
			-->
			<bind name="appear" value="'addedToStage'; 0.6; 0; {alpha: 0}; {alpha: 1}"/>
			<bind name="controller" value="ML_Controllers.ML_DamageController"/>
            
            <bind name="watch" value="'hitlogOwnShipEnabled'; (userPrefs.elementsGroupExpand.hitlogOwnShipEnabled == null) ? true : userPrefs.elementsGroupExpand.hitlogOwnShipEnabled"/>
			<bind name="visible" value="hitlogOwnShipEnabled"/>
			<block>
				<style>
					<width value="220px"/>
				</style>
				<!--   -->
				<bind name="repeat" value="damagedMeEntities;'SelfDamagedRow';{}"/>
			</block>
			<bind name="style" value="'marginTop'; (stageSize.y - 250) + 'px'"/>
			<style>
				<position value="absolute"/>
				<marginLeft value="365px"/>
			</style>
		</block>

		<block>
            <bind name="watch" value="'hitlogEnabled'; (userPrefs.elementsGroupExpand.hitlogEnabled == null) ? true : userPrefs.elementsGroupExpand.hitlogEnabled"/>
            <bind name="visible" value="hitlogEnabled"/>
            <bind name="appear" value="'addedToStage'; 0.6; 0; {alpha: 0}; {alpha: 1}"/>
			<bind name="controller" value="ML_Controllers.ML_DamageController"/>
			
			<block type="text">
				<bind name="text" value="tr('IDS_DEAL_OUT_DAMAGE') + ': ' + totalDamage"/>
				<styleClass value="$TextDefaultBold"/>
				
				<style>
					<fontSize value="16"/>
				</style>
			</block>
			
			<block>
				<style>
					<width value="220px"/>
				</style>
				<!-- damagedEntities contains FIVE last damaged players during battle -->
				<bind name="repeat" value="damagedEntities;'DamagedEntititesRow';{}"/>
			</block>
			
			<style>
				<marginTop value="45px"/>
				<marginLeft value="300px"/>
				<position value="absolute"/>
			</style>
		</block>
		
		<block>		
			<style>
                <position value="absolute"/>
                <top value="2px"/>
                <right value="100px"/>
			</style>
            
            <bind name="watch" value=" 'showSettingsBox'; (userPrefs.elementsGroupExpand.showSettingsBox == null) ? false : userPrefs.elementsGroupExpand.showSettingsBox "/>
            <bind name="catch" value="'switchShipIconsBox'; { showSettingsBox: !showSettingsBox }; 'saveshowSettingsBox'"/>
            <bind name="action" value="'saveshowSettingsBox' ; 'setUserPref' ; {value: showSettingsBox, name: 'elementsGroupExpand', subName: 'showSettingsBox'}"/>

			<block className="button_settings_small" type="native">
				<bind name="dispatch" value="'click'; 'switchShipIconsBox'"/>
				<params>
					<param name="soundSet" value="dropmenu_button"/>
				</params>
			</block>
		</block>
	</block>
    
    <block className="MLSettings">
        <bind name="visible" value="showSettingsBox"/>
        <bind name="collectionDH" value="CC.userPrefs; 'userPrefsCollection'"/>
        <bind name="entityDH" value="'userPrefsEntity'; userPrefsCollection[0].id"/>
        <bind name="watchDH" value="'userPrefs'; ['userPrefsEntity.userPrefs.evUserPrefsChanged']; userPrefsEntity.userPrefs.userPrefs"/>
        
        <bind name="draggable" value="'SBDragZone'; 'IMPosition'; 'SB'"/>
        <bind name="watch" value="'SBPositionX';	(userPrefs.IMPositionX.SB == null)		? ((stageSize.x / 2) - 200) : 	userPrefs.IMPositionX.SB"/>
        <bind name="watch" value="'SBPositionY';	(userPrefs.IMPositionY.SB == null)		? ((stageSize.y / 2) - 100) : 	userPrefs.IMPositionY.SB"/>
        <bind name="left" value="SBPositionX"/>
        <bind name="top" value="SBPositionY"/>
        
        
        <bind name="watch" value=" 'showSettingsBox'; (userPrefs.elementsGroupExpand.showSettingsBox == null) ? false : userPrefs.elementsGroupExpand.showSettingsBox "/>
        <bind name="catch" value="'switchShipIconsBox'; { showSettingsBox: !showSettingsBox }; 'saveshowSettingsBox'"/>
        <bind name="action" value="'saveshowSettingsBox' ; 'setUserPref' ; {value: showSettingsBox, name: 'elementsGroupExpand', subName: 'showSettingsBox'}"/>
        
        <bind name="appear" value="'addedToStage'; 0.6; 0; {alpha: 0}; {alpha: 1}"/>
        <style>
            <position value="absolute"/>
            <backgroundColor value="0x33001000"/>
        </style>
        
        <bind name="instance" value="'DropShadow'; {}"/>
        
        <block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="true"/>
			<style>
				<marginTop value="-2px"/>
				<marginBottom value="-2px"/>
			</style>
		</block>

        <block> 
            <style>
                <marginBottom value="5px"/>
                <marginTop value="5px"/>
                <marginRight value="5px"/>
                <marginLeft value="5px"/>
            </style>

            <block>
                <block type="text">
                    <text value="IDS_MENU_SETTINGS"/>
                    <styleClass value="$TextDefault"/>
                    <style>
                        <fontSize value="18"/>
                    </style>
                </block>
                
                <block>
                    <style>
                        <position value="absolute"/>
                        <right value="5px"/>
                        <marginTop value="5px"/>
                    </style>
                    <block className="button_close" type="native">
                        <bind name="dispatch" value="'click'; 'switchShipIconsBox'"/>
                    </block>
                </block>
                
                <style>
                    <width value="400px"/>
                </style>
                
                <bind name="instance" value="'HorizontalDivider'; {}"/>
                <params>
                    <param name="name" value="SBDragZone"/>
                </params>
            </block>
            
            
            <block className="SettingsList">
                <style>
                    <marginRight value="5px"/>
                    <marginLeft value="5px"/>
                    <flow value="horizontal"/>
                </style>
                
                <block className="LeftSettingColumn">
                    <style>
                        <width value="200"/>
                    </style>
                    
                    <block className="EarsSettings">
                        <block type="text">
                            <text value="IDS_TEAM_STRUCTURE"/>
                            <styleClass value="$TextDefault"/>
                            <style>
                                <fontSize value="17"/>
                            </style>
                        </block>
                        
                        <block>
                            <styleClass value="$Fullsize"/>
                            <bind name="instance" value="'HorizontalDivider'; {}"/>
                            <style>
                                <marginBottom value="8px"/>
                            </style>
                        </block>
                        
                        
                        <block className="showRows">
                            <style>
                                <scaleX value="0.75"/>
                                <scaleY value="0.75"/>
                            </style>
                            <bind name="watch" value="'earsEnabled'; (userPrefs.elementsGroupExpand.earsEnabled == null) ? true : userPrefs.elementsGroupExpand.earsEnabled "/>
                            <bind name="catch" value="'switchEarsEnabled'; { earsEnabled: !earsEnabled }; 'saveEarsEnabled'"/>
                            <bind name="action" value="'saveEarsEnabled' ; 'setUserPref' ; {value: earsEnabled, name: 'elementsGroupExpand', subName: 'earsEnabled'}"/>
                            
                            <bind name="instance" value="'CheckBox'; {switchProperty: earsEnabled, label: 'IDS_SHOWSTATS', _maxTfWidth: 250}"/>
                            <bind name="dispatch" value="'click'; 'switchEarsEnabled'"/>
                        </block>
                        
                        <block className="showDead">
                            <style>
                                <scaleX value="0.75"/>
                                <scaleY value="0.75"/>
                            </style>
                            <bind name="watch" value="'deadEnabled'; (userPrefs.elementsGroupExpand.deadEnabled == null) ? false : userPrefs.elementsGroupExpand.deadEnabled "/>
                            <bind name="catch" value="'switchDeadEnabled'; { deadEnabled: !deadEnabled }; 'saveDeadEnabled'"/>
                            <bind name="action" value="'saveDeadEnabled' ; 'setUserPref' ; {value: deadEnabled, name: 'elementsGroupExpand', subName: 'deadEnabled'}"/>
                            
                            <bind name="instance" value="'CheckBox'; {switchProperty: deadEnabled, label: 'Show dead', _maxTfWidth: 250}"/>
                            <bind name="dispatch" value="'click'; 'switchDeadEnabled'"/>
                        </block>
                        
                        <block className="showStatistics">
                            <bind name="watch" value="'earsStatisticsEnabled'; (userPrefs.elementsGroupExpand.earsStatisticsEnabled == null) ? true : userPrefs.elementsGroupExpand.earsStatisticsEnabled "/>
                            <bind name="catch" value="'switchEarsStatisticsEnabled'; { earsStatisticsEnabled: !earsStatisticsEnabled }; 'saveEarsStatisticsEnabled'"/>
                            <bind name="action" value="'saveEarsStatisticsEnabled' ; 'setUserPref' ; {value: earsStatisticsEnabled, name: 'elementsGroupExpand', subName: 'earsStatisticsEnabled'}"/>
                            
                            <bind name="instance" value="'CheckBox'; {switchProperty: earsStatisticsEnabled, label: 'Show statistics in ears', _maxTfWidth: 250}"/>
                            <bind name="dispatch" value="'click'; 'switchEarsStatisticsEnabled'"/>
                        </block>
                        
                        <block className="screenSizeTabs">
                            <style>
                                <marginTop value="3px"/>
                                <marginBottom value="3px"/>
                            </style>
                            <bind name="watch" value="'indexEars'; (userPrefs.elementsGroupExpand.indexEars == null) ? false : userPrefs.elementsGroupExpand.indexEars"/>
                            <bind name="catch" value="'switchIndexEars'"/>
                            <bind name="changeDispatch" value="indexEars; 'saveEarsIndex'"/>
                            <bind name="action" value="'saveEarsIndex' ; 'setUserPref' ; {value: indexEars, name: 'elementsGroupExpand', subName: 'indexEars'}"/>
                            <block className="tab_bar_bg" type="native">
                                <style>
                                    <widthByChildren value="true"/>
                                    <heightByChildren value="true"/>
                                </style>
                                <block>
                                    <style>
                                        <marginLeft value="2px"/>
                                        <marginRight value="2px"/>
                                        <flow value="horizontal"/>
                                    </style>
                                    <block className="MainTabSmall">
                                        <block className="tab_bar_item_small" type="native">
                                            <style>
                                                <width value="98px"/>
                                                <height value="25px"/>
                                            </style>
                                            <bind name="selected" value="!indexEars"/>
                                            <bind name="dispatch" value="'buttonClick'; 'switchIndexEars'; {indexEars: false}"/>
                                            <bind name="label" value="'Mode1'"/>
                                        </block>
                                    </block>
                                    <block className="MainTabSmall">
                                        <block className="tab_bar_item_small" type="native">
                                            <style>
                                                <width value="98px"/>
                                                <height value="25px"/>
                                            </style>
                                            <bind name="selected" value="indexEars"/>
                                            <bind name="dispatch" value="'buttonClick'; 'switchIndexEars'; {indexEars: true}"/>
                                            <bind name="label" value="'Mode2'"/>
                                        </block>
                                    </block>
                                </block>
                            </block>
                        </block>
                    </block>
                    
                    
                    <block className="markersSettings">
                        <block type="text">
                            <text value="Markers"/>
                            <styleClass value="$TextDefault"/>
                            <style>
                                <fontSize value="17"/>
                            </style>
                        </block>
                        
                        <block>
                            <styleClass value="$Fullsize"/>
                            <bind name="instance" value="'HorizontalDivider'; {}"/>
                            <style>
                                <marginBottom value="8px"/>
                            </style>
                        </block>
                        
                        
                        <block className="statisticsInMarkers">
                            <bind name="watch" value=" 'markersEnabled'; (userPrefs.elementsGroupExpand.markersEnabled == null) ? true : userPrefs.elementsGroupExpand.markersEnabled "/>
                            <bind name="catch" value="'switchMarkersEnabledBox'; { markersEnabled: !markersEnabled }; 'saveMarkersEnabled'"/>
                            <bind name="action" value="'saveMarkersEnabled' ; 'setUserPref' ; {value: markersEnabled, name: 'elementsGroupExpand', subName: 'markersEnabled'}"/>
                            
                            
                            <bind name="instance" value="'CheckBox'; {switchProperty: markersEnabled, label: 'Markers', _maxTfWidth: 250}"/>
                            <bind name="dispatch" value="'click'; 'switchMarkersEnabledBox'"/>
                        </block>
                    </block>
                </block>
                
                <block className="RightSettingColumn">
                    <style>
                        <width value="185"/>
                        <marginLeft value="15"/>
                    </style>
                    
                    <block className="damageSettings">
                        <block type="text">
                            <text value="Damage"/>
                            <styleClass value="$TextDefault"/>
                            <style>
                                <fontSize value="17"/>
                            </style>
                        </block>
                        
                        <block>
                            <styleClass value="$Fullsize"/>
                            <bind name="instance" value="'HorizontalDivider'; {}"/>
                            <style>
                                <marginBottom value="8px"/>
                            </style>
                        </block>
                        
                        
                        <block className="showDamagedEnemies">
                            <bind name="watch" value=" 'hitlogEnabled'; (userPrefs.elementsGroupExpand.hitlogEnabled == null) ? true : userPrefs.elementsGroupExpand.hitlogEnabled "/>
                            <bind name="catch" value="'switchHitlogEnabledBox'; { hitlogEnabled: !hitlogEnabled }; 'saveHitlogEnabled'"/>
                            <bind name="action" value="'saveHitlogEnabled' ; 'setUserPref' ; {value: hitlogEnabled, name: 'elementsGroupExpand', subName: 'hitlogEnabled'}"/>
                            
                            
                            <bind name="instance" value="'CheckBox'; {switchProperty: hitlogEnabled, label: 'Show damaged ships', _maxTfWidth: 250}"/>
                            <bind name="dispatch" value="'click'; 'switchHitlogEnabledBox'"/>
                        </block>
                         
                        <block className="showMeDamagedEnemies">
                            <bind name="watch" value=" 'hitlogOwnShipEnabled'; (userPrefs.elementsGroupExpand.hitlogOwnShipEnabled == null) ? true : userPrefs.elementsGroupExpand.hitlogOwnShipEnabled "/>
                            <bind name="catch" value="'switchHitlogOwnEnabledBox'; { hitlogOwnShipEnabled: !hitlogOwnShipEnabled }; 'saveHitlogOwnEnabled'"/>
                            <bind name="action" value="'saveHitlogOwnEnabled' ; 'setUserPref' ; {value: hitlogOwnShipEnabled, name: 'elementsGroupExpand', subName: 'hitlogOwnShipEnabled'}"/>                                
                    
                            <bind name="instance" value="'CheckBox'; {switchProperty: hitlogOwnShipEnabled, label: 'IDS_BATTLE_STATS_TAKEN_DAMAGE', _maxTfWidth: 250}"/>
                            <bind name="dispatch" value="'click'; 'switchHitlogOwnEnabledBox'"/>
                        </block>
                    </block>
                    
                    <block className="otherSettings">
                        <block type="text">
                            <text value="Other"/>
                            <styleClass value="$TextDefault"/>
                            <style>
                                <fontSize value="17"/>
                            </style>
                        </block>
                        
                        <block>
                            <styleClass value="$Fullsize"/>
                            <bind name="instance" value="'HorizontalDivider'; {}"/>
                            <style>
                                <marginBottom value="8px"/>
                            </style>
                        </block>                            
                        
                        <block className="statisticsInMarkers">
                            <bind name="watch" value=" 'clockEnabled'; (userPrefs.elementsGroupExpand.clockEnabled == null) ? true : userPrefs.elementsGroupExpand.clockEnabled "/>
                            <bind name="catch" value="'switchClockEnabledBox'; { clockEnabled: !clockEnabled }; 'saveClockEnabled'"/>
                            <bind name="action" value="'saveClockEnabled' ; 'setUserPref' ; {value: clockEnabled, name: 'elementsGroupExpand', subName: 'clockEnabled'}"/>
                            
                            <bind name="instance" value="'CheckBox'; {switchProperty: clockEnabled, label: 'Clock', _maxTfWidth: 250}"/>
                            <bind name="dispatch" value="'click'; 'switchClockEnabledBox'"/>
                        </block>
                        
                        <block className="showFrags">
                            <bind name="watch" value=" 'fragsEnabled'; (userPrefs.elementsGroupExpand.fragsEnabled == null) ? true : userPrefs.elementsGroupExpand.fragsEnabled "/>
                            <bind name="catch" value="'switchFragsEnabledBox'; { fragsEnabled: !fragsEnabled }; 'saveFragsEnabled'"/>
                            <bind name="action" value="'saveFragsEnabled' ; 'setUserPref' ; {value: fragsEnabled, name: 'elementsGroupExpand', subName: 'fragsEnabled'}"/>
                            
                            <bind name="instance" value="'CheckBox'; {switchProperty: fragsEnabled, label: 'Show team frags', _maxTfWidth: 250}"/>
                            <bind name="dispatch" value="'click'; 'switchFragsEnabledBox'"/>
                        </block>
                    </block>
                </block>
                
            </block>
            
            <!--<block>-->
                <!--<bind name="instance" value="'CheckBox'; {switchProperty: targetInfoEnabled, label: 'Show target info', _maxTfWidth: 250}"/>-->
                <!--<bind name="dispatch" value="'click'; 'switchTargetInfoEnabledBox'"/>-->
            <!--</block>				-->
            <!-- end list of settings -->
        </block>
    </block>
	
	<!-- templates -->
	<block className="DamagedEntititesRow">
		<style>
			<height value="15px"/>
		</style>
		<bind name="appear" value="'addedToStage'; 0.6; 0; {alpha: 0}; {alpha: 1}"/>
		<block>
			<block type="text"> <!-- player -->
				<styleClass value="$TextDefault"/>
				<styleClass value="$FontSizeSmall"/>
				<bind name="text" value="player.name"/>
				<style>
					<width value="67px"/>
				</style>
			</block>
			
			<block>  <!-- ship icon -->
				<style>
					<width     value="83px"/>
					<height    value="15px"/>
					<marginTop value="3px"/>
				</style>
				<bind name="scaleX" value="0.65"/>
				<bind name="scaleY" value="0.65"/>	
				<bind name="style"  value="'backgroundImage'; 'url:' + player.pathShipTinyIcon"/>
			</block>
			
			<block type="text">  <!-- damage
				-->
				<styleClass value="$TextDefault"/>
				<styleClass value="$FontSizeSmall"/>
				<bind name="text" value="damage"/>
				<style>
					<width value="50px"/>
				</style>
			</block>
			
			<block type="text">  <!-- damage -->
				<bind name="visible" value="last > 0"/>
				<styleClass value="$TextDefault"/>
				<styleClass value="$FontSizeSmall"/>
				<bind name="text" value="' (+' + last + ')'"/>
				<style>
					<width value="70px"/>
				</style>
			</block>
			
			<style>
				<width value="100%"/>
				<flow value="horizontal"/>
			</style>
		</block>
		
	</block>
	
	<block className="SelfDamagedRow">
		<style>
			<height value="15px"/>
		</style>
		<bind name="appear" value="'startShow'; 0.6; 0; {alpha: 0}; {alpha: 1}"/>
		<block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="((ammoType == 'AP') || (ammoType == 'HE')) ? ('IDS_AMMOTYPE_' + ammoType) : ((ammoType == 'torpedo') ? 'TR': ammoType)"/>
				<style>
					<width value="30px"/>
				</style>
			</block>
			
			<block type="text"> <!-- player -->
				<styleClass value="$TextDefault"/>
				<bind name="text" value="toUpperCase(tr(player.shipIDS))"/>
				<style>
					<width value="67px"/>
				</style>
			</block>
						
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="text" value="'-' + damage"/>
				<style>
					<width value="50px"/>
				</style>
			</block>
			
			<style>
				<width value="100%"/>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
            
    <!-- MENU -->
            
    <block className="ML_ComplaintMenu">
		<bind name="controller" value="lesta.unbound.core.UbController"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'evaluationLimits'"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<styleClass value="$ContextMenuDimentions"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'ML_MenuTooltipBackground'; {_isInBattle : (_nickname!=null)}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="class" value="true ? '$ComplaintMenuListItemBattleMargins' : '$ComplaintMenuListItemPostbarrleMargins'"/>
			<block>
				<bind name="name" value="'id_complain'"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_COMPLAIN'"/>
					</block>
				</block>
				<block className="button_expand_h" type="native">
					<style>
						<position value="absolute"/>
						<right value="6px"/>
					</style>
					<styleClass value="$MouseDisable"/>
					<styleClass value="$MiddleVAligned"/>
				</block>
				<bind name="tooltip" value="'ML_ComplaintSubMenu'; {_player: _player, _nickname: _nickname, arenaId: arenaId, _battleType: _battleType, _isInSameDivision: _isInSameDivision}; TooltipBehaviour.submenu"/>
			</block>
			<block>
				<bind name="name" value="'id_praise'"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="MenuItem">
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
					<block type="text">
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<styleClass value="$ContextMenuListItemContent"/>
						<bind name="text" value="'IDS_PRAISE'"/>
					</block>
				</block>
				<block className="button_expand_h" type="native">
					<style>
						<position value="absolute"/>
						<right value="6px"/>
					</style>
					<styleClass value="$MouseDisable"/>
					<styleClass value="$MiddleVAligned"/>
				</block>
				<bind name="tooltip" value="'ML_PraiseSubMenu'; {_player: _player, _nickname: _nickname, arenaId: arenaId, _battleType: _battleType, _isInSameDivision: _isInSameDivision}; TooltipBehaviour.submenu"/>
			</block>
			<block>
				<bind name="name" value="'id_mute'"/>
				<bind name="visible" value="!_isInBattleStats"/>
				<styleClass value="$ContextMenuListItem"/>
				<block>
					<styleClass value="$Fullsize"/>
					<block className="dock_submenu_item" type="native">
						<styleClass value="$FullsizeAbsolute"/>
					</block>
				</block>
				<block>
					<style>
						<hitTest value="false"/>
					</style>
					<styleClass value="$FullsizeAbsolute"/>
					<block>
						<style>
							<width value="24px"/>
							<height value="100%"/>
						</style>
						<block className="button_mute" type="native">
							<style>
								<marginLeft value="4px"/>
								<marginTop value="6px"/>
							</style>
							<bind name="gotoAndStop!" value="_mute ? 'selected_up' : 'selected_over'"/>
						</block>
					</block>
					<block type="text">
						<style>
							<marginLeft value="5px"/>
						</style>
						<styleClass value="$TextDefault"/>
						<styleClass value="$MiddleVAligned"/>
						<bind name="text" value="_mute ? 'IDS_UNMUTE' : 'IDS_MUTE'"/>
					</block>
					<style>
						<flow value="horizontal"/>
					</style>
				</block>
				<bind name="action" value="'buttonClick'; _mute ? 'unmuteUser' : 'muteUser'; {id: _playerId}"/>
			</block>
		</block>
	</block>
    
    <block className="ML_ComplaintSubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'evaluationLimits'"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<style>
			<width value="270px"/>
		</style>
		<bind name="watch" value="'isEvaluationDisabledReason';	(_battleType == BattleTypes.CLUB_BATTLE)	? 'IDS_COMPLAIN_DISABLED_FOR_CLUB_BATTLES' :
											(_battleType == BattleTypes.TRAINING_BATTLE)	? 'IDS_CUSTOM_ROOM' :
														 evaluationLimits.complain == 0 	? 'IDS_DAY_LIMIT_IS_OFF' :
																		_isInSameDivision 	? 'IDS_COMPLAIN_DISABLED_FOR_DIVISION_MEMBERS'
																							: false"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'ML_MenuTooltipBackground'; {_isInBattle : (_nickname != null)}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="class" value="(_nickname!=null) ? '$ComplaintMenuListItemBattleMargins' : '$ComplaintMenuListItemPostbarrleMargins'"/>
			<block>
				<bind name="name" value="'id_complain_bot'"/>
				<bind name="style" value="'alpha'; isEvaluationDisabledReason ? 0.5 : 1"/>
				<styleClass value="$ContextMenuListItem"/>
				<bind name="action" value="'buttonClick'; 'sendEvaluation'; (_nickname != null) 	? {type: EvaluationType.DENUNCIATION, topic: EvaluationTopic.BOT, nickname: _nickname, arenaId: arenaId}
																				: {type: EvaluationType.DENUNCIATION, topic: EvaluationTopic.BOT, accountDBID: _player.dbId, relation: _player.relation, arenaId: arenaId}"/>
				<block className="dock_submenu_item" type="native">
					<bind name="style" value="'hitTest'; isEvaluationDisabledReason ? false : true"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<maxWidth value="252"/>
						<marginLeft value="6px"/>
					</style>
					<text value="IDS_BOT"/>
				</block>
			</block>
			<block>
				<bind name="name" value="'id_complain_bad_player'"/>
				<bind name="style" value="'alpha'; isEvaluationDisabledReason ? 0.5 : 1"/>
				<styleClass value="$ContextMenuListItem"/>
				<bind name="action" value="'buttonClick'; 'sendEvaluation'; (_nickname != null) 	? {type: EvaluationType.DENUNCIATION, topic: EvaluationTopic.PLAY, nickname: _nickname, arenaId: arenaId}
																				: {type: EvaluationType.DENUNCIATION, topic: EvaluationTopic.PLAY, accountDBID: _player.dbId, relation: _player.relation, arenaId: arenaId}"/>
				<block className="dock_submenu_item" type="native">
					<bind name="style" value="'hitTest'; isEvaluationDisabledReason ? false : true"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<maxWidth value="252"/>
						<marginLeft value="6px"/>
					</style>
					<text value="IDS_BAD_PLAYER"/>
				</block>
			</block>
			<block>
				<bind name="name" value="'id_complain_bad_behaviour'"/>
				<bind name="style" value="'alpha'; isEvaluationDisabledReason ? 0.5 : 1"/>
				<styleClass value="$ContextMenuListItem"/>
				<bind name="action" value="'buttonClick'; 'sendEvaluation'; (_nickname != null) 	? {type: EvaluationType.DENUNCIATION, topic: EvaluationTopic.CHAT, nickname: _nickname, arenaId: arenaId}
																				: {type: EvaluationType.DENUNCIATION, topic: EvaluationTopic.CHAT, accountDBID: _player.dbId, relation: _player.relation, arenaId: arenaId}"/>
				<block className="dock_submenu_item" type="native">
					<bind name="style" value="'hitTest'; isEvaluationDisabledReason ? false : true"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<maxWidth value="252"/>
						<marginLeft value="6px"/>
					</style>
					<text value="IDS_BAD_BEHAVIOUR"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="name" value="'id_complain_day_limit'"/>
			<bind name="visible" value="evaluationLimits.complain &gt; 0 &amp;&amp; !isEvaluationDisabledReason"/>
			<style>
				<marginLeft value="9px"/>
				<marginBottom value="6px"/>
			</style>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<maxWidth value="252"/>
					<marginLeft value="1px"/>
				</style>
				<bind name="text" value="tr('IDS_DAY_LIMIT') + ' ' + evaluationLimits.complain"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="isEvaluationDisabledReason"/>
			<style>
				<marginLeft value="9px"/>
				<marginBottom value="6px"/>
			</style>
			<block className="icon_warning_red" type="native">
				<style>
					<marginTop value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<style>
					<maxWidth value="230"/>
					<marginLeft value="1px"/>
				</style>
				<bind name="text" value="isEvaluationDisabledReason"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
	<block className="ML_PraiseSubMenu">
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'evaluationLimits'"/>
		<styleClass value="$DefaultMenuBehaviour"/>
		<style>
			<width value="270px"/>
		</style>
		<bind name="watch" value="'isEvaluationDisabledReason';	(_battleType == BattleTypes.CLUB_BATTLE)	? 'IDS_PRAISE_DISABLED_FOR_CLUB_BATTLES' :
											(_battleType == BattleTypes.TRAINING_BATTLE)	? 'IDS_CUSTOM_ROOM' :
															 evaluationLimits.praise == 0 	? 'IDS_DAY_LIMIT_IS_OFF' :
																		_isInSameDivision 	? 'IDS_PRAISE_DISABLED_FOR_DIVISION_MEMBERS'
																							: false"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'ML_MenuTooltipBackground'; {_isInBattle : false}"/>
		</block>
		<block>
			<style>
				<width value="100%"/>
			</style>
			<bind name="class" value="(_nickname!=null) ? '$ComplaintMenuListItemBattleMargins' : '$ComplaintMenuListItemPostbarrleMargins'"/>
			<block>
				<bind name="name" value="'id_praise_good_player'"/>
				<bind name="style" value="'alpha'; isEvaluationDisabledReason ? 0.5 : 1"/>
				<bind name="action" value="'buttonClick'; 'sendEvaluation'; (_nickname != null) 	? {type: EvaluationType.PRAISE, topic: EvaluationTopic.PLAY, nickname: _nickname, arenaId: arenaId}
																				: {type: EvaluationType.PRAISE, topic: EvaluationTopic.PLAY, accountDBID: _player.dbId, relation: _player.relation, arenaId: arenaId}"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="dock_submenu_item" type="native">
					<bind name="style" value="'hitTest'; isEvaluationDisabledReason ? false : true"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<maxWidth value="252"/>
						<marginLeft value="6px"/>
					</style>
					<text value="IDS_GOOD_PLAYER"/>
				</block>
			</block>
			<block>
				<bind name="name" value="'id_praise_helped_in_chat'"/>
				<bind name="style" value="'alpha'; isEvaluationDisabledReason ? 0.5 : 1"/>
				<bind name="action" value="'buttonClick'; 'sendEvaluation'; (_nickname != null) 	? {type: EvaluationType.PRAISE, topic: EvaluationTopic.CHAT, nickname: _nickname, arenaId: arenaId}
																				: {type: EvaluationType.PRAISE, topic: EvaluationTopic.CHAT, accountDBID: _player.dbId, relation: _player.relation, arenaId: arenaId}"/>
				<styleClass value="$ContextMenuListItem"/>
				<block className="dock_submenu_item" type="native">
					<bind name="style" value="'hitTest'; isEvaluationDisabledReason ? false : true"/>
					<styleClass value="$FullsizeAbsolute"/>
				</block>
				<block type="text">
					<styleClass value="$TextDefault"/>
					<styleClass value="$MiddleVAligned"/>
					<style>
						<maxWidth value="252"/>
						<marginLeft value="6px"/>
					</style>
					<text value="IDS_HELPED_IN_CHAT"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="name" value="'id_praise_day_limit'"/>
			<bind name="visible" value="evaluationLimits.praise &gt; 0 &amp;&amp; !isEvaluationDisabledReason"/>
			<style>
				<marginLeft value="9px"/>
				<marginBottom value="6px"/>
			</style>
			<block className="icon_warning_orange" type="native">
				<style>
					<marginTop value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorUnready'"/>
				<style>
					<maxWidth value="252"/>
					<marginLeft value="1px"/>
				</style>
				<bind name="text" value="tr('IDS_DAY_LIMIT') + ' ' + evaluationLimits.praise"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
		<block>
			<bind name="visible" value="isEvaluationDisabledReason"/>
			<style>
				<marginLeft value="9px"/>
				<marginBottom value="6px"/>
			</style>
			<block className="icon_warning_red" type="native">
				<style>
					<marginTop value="4px"/>
				</style>
			</block>
			<block type="text">
				<styleClass value="$TextDefault"/>
				<bind name="class" value="'$FontColorCompareNegative'"/>
				<style>
					<maxWidth value="230"/>
					<marginLeft value="1px"/>
				</style>
				<bind name="text" value="isEvaluationDisabledReason"/>
			</block>
			<style>
				<flow value="horizontal"/>
			</style>
		</block>
	</block>
    
    <block className="ML_MenuTooltipBackground">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="true"/>
			<style>
				<marginTop value="-2px"/>
				<marginBottom value="-2px"/>
			</style>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(_isInBattle)"/>
			<style>
				<marginTop value="-1px"/>
				<marginBottom value="-1px"/>
			</style>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
	</block>
            
    <block className="ML_MouseInstructionTooltip">
		<styleClass value="$DefaultTooltipBehaviour"/>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="instance" value="'ML_TooltipBackground'; {_isInBattle: _isInBattle}"/>
		</block>
		<block>
			<bind name="visible" value="_multiParagraphArray.length &gt; 0"/>
			<styleClass value="$InfoBlockHorizontalIndentNoWidth"/>
			<style>
				<marginTop value="9px"/>
			</style>
			<bind name="style" value="'marginBottom'; (_multiParagraphArray.length &gt; 0) &amp;&amp; (_mouseInstructions.length &gt; 0) ? '0px' : '5px'"/>
			<bind name="repeat" value="_multiParagraphArray; 'RepeatParagraphItem'; {_maxWidth: _maxWidth, _marginBottom: _marginBottom}"/>
		</block>
		<block>
			<bind name="visible" value="(_multiParagraphArray.length &gt; 0) &amp;&amp; (_mouseInstructions.length &gt; 0)"/>
			<style>
				<width value="100%"/>
			</style>
			<block className="HorizontalDivider">
				<styleClass value="$PxHorizontalCorrection"/>
				<style>
					<width value="100%"/>
					<height value="3px"/>
				</style>
				<block className="divider_h" type="native">
					<styleClass value="$Fullsize"/>
				</block>
			</block>
		</block>
		<block>
			<bind name="visible" value="_mouseInstructions.length &gt; 0"/>
			<styleClass value="$InfoBlockIndentNoWidth"/>
			<bind name="repeat" value="_mouseInstructions; 'MouseInstructionRepeater'; {_maxWidth: _maxWidth, _lastIndex: _mouseInstructions.length - 1}"/>
		</block>
	</block>
            
    <block className="ML_TooltipBackground">
		<styleClass value="$FullsizeAbsolute"/>
		<bind name="controller" value="lesta.dialogs.controllers.EntitySingletonController; 'optionData'"/>
		<block className="contrast_panel" type="native">
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="true"/>
		</block>
		<block>
			<styleClass value="$FullsizeAbsolute"/>
			<bind name="visible" value="!(_isInBattle)"/>
			<block className="hint_panel" type="native">
				<styleClass value="$FullsizeAbsolute"/>
			</block>
		</block>
	</block>
</ui>